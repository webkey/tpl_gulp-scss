{"version":3,"sources":["test-mixins.scss","utils/_mixins.scss","utils/_variables.scss","utils/_placeholders.scss"],"names":[],"mappings":"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","file":"test-mixins.css","sourcesContent":["@import \"utils/variables\";\r\n@import \"utils/mixins\";\r\n@import \"utils/functions\";\r\n\r\n@import \"../libs/mathsass/dist/math\";\r\n@import \"../libs/mathsass/dist/functions/tan\";\r\n\r\n.mx-test .content {\r\n  margin: 0 0 0 300px;\r\n\r\n  @include padding-vertical(nth($layout-text-space, 1));\r\n}\r\n\r\n.mx-test .sidebar {\r\n  width: 260px;\r\n}\r\n\r\n.mx-test .layout-text {\r\n  @include padding-horizontal(nth($layout-text-space, 2));\r\n}\r\n\r\n.mx-test .section {\r\n  margin-bottom: $bottom-space * 3;\r\n}\r\n\r\n.mx-test .section__box {\r\n  margin-bottom: $bottom-space * 2;\r\n}\r\n\r\n.mx-subtitle {\r\n  @include font-bold;\r\n\r\n  margin-bottom: $bottom-space--small;\r\n  background-color: white;\r\n\r\n  .mx-element & {\r\n    padding: $bottom-space--small;\r\n  }\r\n}\r\n\r\n.mx-element {\r\n  background-color: darkolivegreen;\r\n}\r\n\r\n.mx-inner {\r\n  background-color: darkslategray;\r\n}\r\n\r\n.mx-test .mx-object-fit-cover {\r\n  @include ratio(16, 9, true);\r\n\r\n  position: relative;\r\n  width: 320px;\r\n\r\n  img {\r\n    @include object-fit-position($pos: absolute);\r\n  }\r\n}\r\n\r\n.mx-test .mx-object-fit-contain {\r\n  @include ratio(16, 9, true);\r\n\r\n  position: relative;\r\n  width: 320px;\r\n\r\n  img {\r\n    @include object-fit-position(contain, absolute);\r\n  }\r\n}\r\n\r\n.mx-margin {\r\n  width: 320px;\r\n  overflow: hidden;\r\n}\r\n\r\n.mx-margin__inner {\r\n  @include size(auto, 100px);\r\n  @include margin(10px, 20px, 30px, 40px);\r\n\r\n  &::before {\r\n    @include pseudo($content: \"margin(10px, 20px, 30px, 40px)\", $pos: relative);\r\n\r\n    padding: 5px;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.mx-push-auto {\r\n  padding: 10px;\r\n}\r\n\r\n.mx-push-auto__inner {\r\n  @include size(320px, 50px);\r\n  @include push-auto;\r\n}\r\n\r\n// triangle\r\n.mx-triangle {\r\n  @include size(320px, 200px);\r\n\r\n  padding: 10px;\r\n  text-align: center;\r\n  cursor: default;\r\n}\r\n\r\n.mx-triangle__inner {\r\n  display: inline-block;\r\n  position: relative;\r\n  vertical-align: middle;\r\n  max-width: 90%;\r\n\r\n  @include size(200px, 50px);\r\n\r\n  filter: drop-shadow(4px 4px 2px rgba(0, 0, 0, 0.4));\r\n\r\n  &::before {\r\n    @include pseudo;\r\n  }\r\n\r\n  &.mx--to-north::before {\r\n    @include triangle(top, $size: 10px);\r\n  }\r\n\r\n  &.mx--to-east::before {\r\n    @include triangle(right, $size: 10px);\r\n  }\r\n\r\n  &.mx--to-south::before {\r\n    @include triangle(bottom, $size: 10px);\r\n  }\r\n\r\n  &.mx--to-west::before {\r\n    @include triangle(left, $size: 10px);\r\n  }\r\n}\r\n\r\n.mx-triangle-pretty {\r\n  @include size(320px, 200px);\r\n\r\n  padding: 10px;\r\n  text-align: center;\r\n  cursor: default;\r\n}\r\n\r\n.mx-triangle-pretty__inner {\r\n  display: inline-block;\r\n  position: relative;\r\n  vertical-align: middle;\r\n  max-width: 90%;\r\n\r\n  @include size(200px, 50px);\r\n\r\n  filter: drop-shadow(4px 4px 2px rgba(0, 0, 0, 0.4));\r\n\r\n  &.mx--to-north {\r\n    @include triangle-pretty(top, (left: 50%, bottom: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px);\r\n  }\r\n\r\n  &.mx--to-east {\r\n    @include triangle-pretty(right, (top: 50%, left: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px);\r\n  }\r\n\r\n  &.mx--to-south {\r\n    @include triangle-pretty(bottom, (right: 50%, top: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px);\r\n  }\r\n\r\n  &.mx--to-west {\r\n    @include triangle-pretty(left, (top: 50%, right: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px);\r\n  }\r\n\r\n  &.mx--to-north {\r\n    @include triangle-pretty(bottom, (left: 50%, top: 0), darkslategray, 30px, 30px, darkolivegreen, 3px);\r\n  }\r\n}\r\n\r\n.mx-mathsass {\r\n  @include size(320px, 200px);\r\n\r\n  padding: 10px;\r\n  text-align: center;\r\n  cursor: default;\r\n}\r\n\r\n.mx-mathsass__inner {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  max-width: 90%;\r\n\r\n  @include size(240px, 50px);\r\n\r\n  transform: rotate(rad-to-deg(atan(1)));\r\n}\r\n\r\n.mx-font {\r\n  padding: 1em;\r\n  background-color: white;\r\n\r\n  .mx-font--01 {\r\n    @include font-size(1.4rem, 1.5);\r\n  }\r\n\r\n  .mx-font--02 {\r\n    @include font-size(1.7rem, 1.8);\r\n  }\r\n\r\n  .mx-font--03 {\r\n    @include font-size(2.1rem, 1.2);\r\n  }\r\n}","@import \"variables\";\r\n@import \"functions\";\r\n@import \"placeholders\";\r\n\r\n@import \"../../libs/mathsass/dist/math\";\r\n@import \"../../libs/mathsass/dist/functions/tan\";\r\n\r\n////\r\n/// @author Astronim* Sergey Ilchenko\r\n/// @access public\r\n///\r\n\r\n// =============================================================================\r\n// size\r\n// =============================================================================\r\n/// Примесь позволяет определять `width` и `height` одновременно.\r\n///\r\n/// @param {Length} $width - `width` элемента\r\n/// @param {Length} $height ($width) - `height` элемента\r\n///\r\n/// @example Sass - Использование\r\n/// .foo\r\n///   +size(10em)\r\n///\r\n/// .bar\r\n///   +size(100%, 10em)\r\n///\r\n/// @example css - Вывод CSS\r\n/// .foo {\r\n///   width: 10em;\r\n///   height: 10em;\r\n/// }\r\n///\r\n/// .bar {\r\n///   width: 100%;\r\n///   height: 10em;\r\n/// }\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n// =============================================================================\r\n// Position\r\n// =============================================================================\r\n/// Примесь устанавливает верхнюю и левую координаты\r\n///\r\n/// @param {Length} $t [0] - верхняя координата\r\n/// @param {Length} $l [0] - левая координата\r\n///\r\n/// @example Sass - Использование\r\n/// @example css - Вывод CSS\r\n\r\n@mixin position($t: 0, $l: $t) {\r\n  top: $t;\r\n  left: $l;\r\n}\r\n\r\n// =============================================================================\r\n// font\r\n// =============================================================================\r\n/// Примесь добавляет одновремменно `font-size` и `line-height`\r\n/// Используются переменный `$font-size` и `$line-height`\r\n///\r\n/// @param {Length} $width - `width` элемента\r\n/// @param {Length} $height ($width) - `height` элемента\r\n///\r\n/// @example Sass - Использование\r\n/// .foo\r\n///   +font(1.4rem, 1.5)\r\n///\r\n/// @example css - Вывод CSS\r\n/// .foo {\r\n///   font-size: 1.4rem;\r\n///   line-height: 1.5;\r\n/// }\r\n\r\n@mixin font-size($font-size: inherit, $line-height: inherit) {\r\n  font-size: $font-size;\r\n  line-height: $line-height;\r\n}\r\n\r\n// =============================================================================\r\n// display inline block + vertical align\r\n// =============================================================================\r\n/// Примесь задает пару свойст display: inline-block и vertical-align для\r\n/// выравнивания инлайн-блок элементов по вертикали\r\n@mixin display-inline-block-top {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n@mixin display-inline-block-middle {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n@mixin display-inline-block-bottom {\r\n  display: inline-block;\r\n  vertical-align: baseline;\r\n}\r\n\r\n// =============================================================================\r\n// pseudo\r\n// =============================================================================\r\n/// Примесь добавляет к псевдоэлементу базовые свойства.\r\n///\r\n/// @param {String} $content [''] - контент псевдоэлемента\r\n/// @param {String} $display [block] - тип псевдоэлемента\r\n/// @param {String} $pos [absolute] - позицирование псевдоэлемента\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   &::before\r\n///     +pseudo()\r\n///\r\n/// .foo\r\n///   &::before\r\n///     +pseudo(attr(data), inline-block, relative)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo::before {\r\n///   content: '';\r\n///   display: block;\r\n///   position: absolute;\r\n/// }\r\n///\r\n/// .foo::before {\r\n///   content: attr(data);\r\n///   display: inline-block;\r\n///   position: relative;\r\n/// }\r\n\r\n@mixin pseudo($content: \"\", $display: block, $pos: absolute) {\r\n  content: $content;\r\n  display: $display;\r\n  position: $pos;\r\n}\r\n\r\n@mixin pseudo-block-relative($content: \"\") {\r\n  @include pseudo($content: $content, $display: block, $pos: relative);\r\n}\r\n\r\n@mixin pseudo-relative($content: \"\") {\r\n  @include pseudo($content: $content, $display: null, $pos: relative);\r\n}\r\n\r\n@mixin pseudo-inline-block($content: \"\") {\r\n  @include pseudo($content: $content, $display: inline-block, $pos: null);\r\n}\r\n\r\n@mixin pseudo-inline-block-relative($content: \"\") {\r\n  @include pseudo($content: $content, $display: inline-block, $pos: relative);\r\n}\r\n\r\n@mixin pseudo-content($content: \"\") {\r\n  @include pseudo($content: $content, $display: null, $pos: null);\r\n}\r\n\r\n// =============================================================================\r\n// antialiased\r\n// =============================================================================\r\n/// Нормализует отображение текста, если к нему применяется анимированная трансформация\r\n///\r\n/// @param {} hasn't params\r\n///\r\n/// @example Sass - Использование\r\n/// @example css - Вывод CSS\r\n\r\n@mixin antialiased {\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n// =============================================================================\r\n// clear\r\n// =============================================================================\r\n/// Помощник для сброса внутреннего обтекания\r\n/// @author Николас Галлагер\r\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix\r\n\r\n@mixin clear {\r\n  &::after {\r\n    content: \"\";\r\n    display: table;\r\n    clear: both;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// truncate\r\n// =============================================================================\r\n/// Обрезает текст и добавляет троеточие\r\n///\r\n/// @param {Length} $max-width [320px] - максиальная ширина элемента\r\n///\r\n/// @example Sass - Использование\r\n/// @example css - Вывод CSS\r\n\r\n@mixin truncate($max-width: 320px) {\r\n  max-width: $max-width;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n\r\n// =============================================================================\r\n// margin-horizontal / margin-vertical / padding-horizontal / padding-vertical\r\n// =============================================================================\r\n/// Примеси добавляют горизонтальные/вертикальные внешние/внутренние отстпупы (`margin/padding`)\r\n/// в развернутом виде.\r\n///\r\n/// @param {Length} $left [null] - левый `margin/padding` элемента\r\n/// @param {Length} $right [$left] - правый `margin/padding` элемента\r\n/// @param {Length} $top [null] - верхний `margin/padding` элемента\r\n/// @param {Length} $bottom [$top] - нижний `margin/padding` элемента\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   +margin-horizontal(20px)\r\n///\r\n/// .foo\r\n///   +margin-horizontal(20px, 10px)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo {\r\n///   margin-left: 20px;\r\n///   margin-right: 20px;\r\n/// }\r\n///\r\n/// .foo {\r\n///   margin-left: 20px;\r\n///   margin-right: 10px;\r\n/// }\r\n\r\n@mixin margin-horizontal($left, $right: $left) {\r\n  margin: {\r\n    right: $right;\r\n    left: $left;\r\n};\r\n}\r\n\r\n@mixin margin-vertical($top, $bottom: $top) {\r\n  margin: {\r\n    top: $top;\r\n    bottom: $bottom;\r\n};\r\n}\r\n\r\n@mixin padding-horizontal($left, $right: $left) {\r\n  padding: {\r\n    right: $right;\r\n    left: $left;\r\n};\r\n}\r\n\r\n@mixin padding-vertical($top, $bottom: $top) {\r\n  padding: {\r\n    top: $top;\r\n    bottom: $bottom;\r\n};\r\n}\r\n\r\n// =============================================================================\r\n// margin / padding\r\n// =============================================================================\r\n/// Примеси добавляют внешние/внутренние отстпупы (`margin/padding`) в развернутом виде.\r\n/// Значения можно добавлять поочередно: верхний, правый, нижний, левый.\r\n/// Пропустить значение можно задав ему null.\r\n/// Значения также можно добавлять через ключ: $t, $r, $b, $l, - соответственно.\r\n/// Если заданно четыре значения не равных null, то `margin` будет в сокращенном виде.\r\n///\r\n/// @param {Length} $t [null] - верхний `margin/padding` элемента\r\n/// @param {Length} $r [null] - правый `margin/padding` элемента\r\n/// @param {Length} $b [null] - нижний `margin/padding` элемента\r\n/// @param {Length} $l [null] - левый `margin/padding` элемента\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   +margin(10px, null, 30px, 40px)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo {\r\n///   margin-top: 10px;\r\n///   margin-bottom: 30px;\r\n///   margin-left: 40px;\r\n/// }\r\n\r\n@mixin margin($top: null, $right: null, $bottom: null, $left: null) {\r\n  @if $top and $right and $bottom and $left {\r\n    margin: $top $right $bottom $left;\r\n}\r\n@else {\r\n  margin: {\r\n    @if $top {\r\n      top: $top;\r\n  }\r\n    @if $right {\r\n      right: $right;\r\n  }\r\n    @if $bottom {\r\n      bottom: $bottom;\r\n  }\r\n    @if $left {\r\n      left: $left;\r\n  }\r\n};\r\n}\r\n}\r\n\r\n@mixin padding($top: null, $right: null, $bottom: null, $left: null) {\r\n  @if $top and $right and $bottom and $left {\r\n    padding: $top $right $bottom $left;\r\n}\r\n@else {\r\n  padding: {\r\n    @if $top {\r\n      top: $top;\r\n  }\r\n    @if $right {\r\n      right: $right;\r\n  }\r\n    @if $bottom {\r\n      bottom: $bottom;\r\n  }\r\n    @if $left {\r\n      left: $left;\r\n  }\r\n};\r\n}\r\n}\r\n\r\n/// Примесь центрирует блочный элемент с ограниченной шириной.\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   +push-auto\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo {\r\n///   margin-left: auto;\r\n///   margin-right: auto;\r\n/// }\r\n\r\n@mixin push-auto() {\r\n  @include margin-horizontal(auto)\r\n}\r\n\r\n/// Примесь позволяет сохранять пропорции элементов при респонсиве\r\n///\r\n/// @param {Number} $x [1] - ширина в пропорциональном соотношении\r\n/// @param {Number} $y [1] - высота в пропорциональном соотношении\r\n/// @param {Boolean} $pseudo [false] - указывает добавлять псевдоэлемент или\r\n/// использовать `padding` самого элемента\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   +responsive-ratio(1)\r\n///\r\n/// .foo\r\n///   +responsive-ratio(16, 9)\r\n///\r\n/// .foo\r\n///   +responsive-ratio(4, 3, true)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo {\r\n///   padding-top: 100%\r\n/// }\r\n///\r\n/// .foo {\r\n///   padding-top: 56.25%\r\n/// }\r\n///\r\n/// .foo::before {\r\n///   content: \"\";\r\n///   display: block;\r\n///   position: relative;\r\n///   height: 0;\r\n///   width: 100%;\r\n///   padding-top: 75%;\r\n/// }\r\n\r\n@mixin ratio($x: 1, $y: 1, $pseudo: false) {\r\n  $padding: round-float($y / $x * 100%, 2);\r\n  @if $pseudo {\r\n    &::before {\r\n      @include pseudo($pos: relative);\r\n      height: 0;\r\n      padding-top: $padding;\r\n  }\r\n}\r\n@else {\r\n  height: 0;\r\n  padding-top: $padding;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Сentering\r\n// =============================================================================\r\n/// Примесь центрирует элемент относительно родителя\r\n///\r\n/// @param {Boolean} $transform [true] - направление выравнивания\r\n///\r\n/// @example Sass - Использование\r\n/// @example css - Вывод CSS\r\n@mixin centering($width: null, $height: null, $transform: true, $pos: absolute) {\r\n  position: $pos;\r\n  left: 50%;\r\n  top: 50%;\r\n  @if $transform {\r\n    transform: translate(-50%, -50%);\r\n}\r\n@else {\r\n  width: $width;\r\n  height: $height;\r\n  @include margin($top: round(-$height * 0.5), $left: round(-$width * 0.5));\r\n}\r\n}\r\n\r\n/// 1.1 С помощью \"transform: translate\" без позициирования:\r\n@mixin centering-transform($pos: null) {\r\n  position: $pos;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n/// 1.2 С помощью \"transform: translate\" + \"position: absolute\":\r\n@mixin centering-transform-abs {\r\n  @include centering-transform($pos: absolute);\r\n}\r\n\r\n/// 1.3 С помощью \"transform: translate\" + \"position: relative\":\r\n@mixin centering-transform-rel {\r\n  @include centering-transform($pos: relative);\r\n}\r\n\r\n/// 2. С помощью margin:\r\n@mixin centering-margin($width: null, $height: null, $pos: null) {\r\n  position: $pos;\r\n  left: 50%;\r\n  top: 50%;\r\n  @include margin($top: round(-$height * 0.5), $left: round(-$width * 0.5));\r\n}\r\n\r\n// =============================================================================\r\n// Reset for inline-block elements\r\n// =============================================================================\r\n/// обнуляет горизонтальные отступы между `inline-block` елементами\r\n@mixin clear-spacing {\r\n  font-size: 0;\r\n  letter-spacing: -4px;\r\n}\r\n\r\n// =============================================================================\r\n// Grid Item\r\n// =============================================================================\r\n/// Формирует упрощенную сетку элементов с применением `display: inline-block`, или `float: left`;\r\n/// Для родителя наобходимо подключить `+grid-parent`;\r\n/// В случае с `inline-block` обнулить `font:size` и `letter-spacing` (примесь `+clear-spacing`)\r\n/// На оберту родителя при необходимости задать `overflow: hidden`;\r\n/// Для дочерних элементов необходимо подключить `+grid-item` или `+grid-item-float`;\r\n///\r\n/// @param {Length} $horizontal-space [20px] - горизонтальные отступы между элементами\r\n/// @param {Length} $length-in-row [2] - количество элементов в ряду\r\n/// @param {Length} $bottom-space [$horizontal-space] - нижние отступы элементов\r\n///\r\n/// @example Sass - Использование\r\n/// @example css - Вывод CSS\r\n\r\n@mixin grid-parent($horizontal-space: 20px) {\r\n  margin: {\r\n    @if $horizontal-space == 0 {\r\n      left: 0;\r\n      right: 0;\r\n  }\r\n  @else {\r\n    left: -#{round($horizontal-space / 2)};\r\n    right: -#{round($horizontal-space / 2)};\r\n  }\r\n};\r\n}\r\n\r\n@mixin grid-item($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  width: round-float(100% / $length-in-row, 2);\r\n  padding: {\r\n    left: round($horizontal-space / 2);\r\n    right: round($horizontal-space / 2);\r\n};\r\n  &:nth-child(n) {\r\n    margin-top: $bottom-space;\r\n}\r\n  &:nth-child(-n+#{$length-in-row}) {\r\n    margin-top: 0;\r\n}\r\n}\r\n\r\n/// использовать если нужно только поменять количество колонок\r\n@mixin grid-item-responsive($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\r\n  width: round-float(100% / $length-in-row, 2);\r\n  padding: {\r\n    left: round($horizontal-space / 2);\r\n    right: round($horizontal-space / 2);\r\n};\r\n  &:nth-child(n) {\r\n    margin-top: $bottom-space;\r\n}\r\n  &:nth-child(-n+#{$length-in-row}) {\r\n    margin-top: 0;\r\n}\r\n}\r\n\r\n@mixin grid-item-float($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\r\n  float: left;\r\n  width: round-float(100% / $length-in-row, 2);\r\n  padding: {\r\n    left: round($horizontal-space / 2);\r\n    right: round($horizontal-space / 2);\r\n};\r\n  &:nth-child(n) {\r\n    margin-top: $bottom-space;\r\n    clear: none;\r\n}\r\n  &:nth-child(-n+#{$length-in-row}) {\r\n    margin-top: 0;\r\n}\r\n  &:nth-child(#{$length-in-row}n+1) {\r\n    clear: left;\r\n}\r\n}\r\n\r\n/// использовать если нужно только поменять количество колонок\r\n@mixin grid-item-float-responsive($length-in-row: 1, $horizontal-space: 0, $bottom-space: $horizontal-space) {\r\n  width: round-float(100% / $length-in-row, 2);\r\n  padding: {\r\n    left: round($horizontal-space / 2);\r\n    right: round($horizontal-space / 2);\r\n};\r\n  &:nth-child(n) {\r\n    margin-top: $bottom-space;\r\n    clear: none;\r\n}\r\n  &:nth-child(-n+#{$length-in-row}) {\r\n    margin-top: 0;\r\n}\r\n  &:nth-child(#{$length-in-row}n+1) {\r\n    clear: left;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Fill parent with absolute or relative position or without position\r\n// =============================================================================\r\n/// Примесь задает блочному элемунту размеры родителя\r\n///\r\n/// @param {} no param\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// img.foo\r\n///   +cover\r\n///\r\n/// img.foo\r\n///   +cover-rel()\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// img.foo {\r\n///   left: 0;\r\n///   top: 0;\r\n///   width: 100%;\r\n///   height: 100%;\r\n/// }\r\n///\r\n/// img.foo {\r\n///   position: relative\r\n///   left: 0;\r\n///   top: 0;\r\n///   width: 100%;\r\n///   height: 100%;\r\n/// }\r\n\r\n@mixin cover($position: null) {\r\n  @if $position {\r\n    position: $position;\r\n}\r\n  @include position(0, 0);\r\n  @include size(100%);\r\n}\r\n\r\n@mixin cover-abs {\r\n  @include cover($position: absolute);\r\n}\r\n\r\n@mixin cover-rel {\r\n  @include cover($position: relative);\r\n}\r\n\r\n/// Примесь позволяет указывает изображению способ заполнения блока,\r\n/// в котором находится\r\n/// Для ie9 необходимо подключить скрипт и прописать дополнительные свойства\r\n/// @link https://medium.com/@primozcigler/neat-trick-for-css-object-fit-fallback-on-edge-and-other-browsers-afbc53bbb2c3#.e3eu6mvxl\r\n///\r\n/// @param {String} $fit [cover] - метод заполнения\r\n/// @param {String} $pos [relative] - тип позиционирования\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// img.foo\r\n///   +object-fit-position\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// img.foo {\r\n///   position: relative\r\n///   top: 50%\r\n///   left: 50%\r\n///   max-width: none\r\n///   width: auto\r\n///   min-width: 100%\r\n///   min-height: 100%\r\n///   transform: translate(-50%, -50%)\r\n///   object-fit: cover\r\n/// }\r\n\r\n@mixin object-fit-position($fit: cover, $pos: relative) {\r\n  position: $pos;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 0;\r\n  min-height: 0;\r\n  max-width: none;\r\n  max-height: none;\r\n  height: 100%;\r\n  width: 100%;\r\n  transform: translate(-50%, -50%);\r\n  backface-visibility: hidden;\r\n  object-fit: $fit;\r\n}\r\n\r\n/// This mixin can be used to set the object-fit:\r\n/// +object-fit(contain)\r\n///\r\n/// or object-fit and object-position:\r\n/// +object-fit(cover, top)\r\n\r\n/// need to add this rules\r\n/// display: block\r\n/// width: 100%\r\n/// height: 100%\r\n/// max-width: none\r\n\r\n@mixin object-fit($fit: fill, $position: null) {\r\n  //-o-object-fit: $fit\r\n  object-fit: $fit;\r\n  @if $position {\r\n    //-o-object-position: $position\r\n    object-position: $position;\r\n    font-family: \"object-fit: #{$fit}; object-position: #{$position}\";\r\n}\r\n@else {\r\n  font-family: \"object-fit: #{$fit}\";\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Hide text for screen reader\r\n// =============================================================================\r\n/// Примесь скрывает текст, который остается видимым для генераторов речи\r\n\r\n@mixin hide-text {\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  width: 1px;\r\n  &:active, &:focus {\r\n    clip: auto;\r\n    height: auto;\r\n    margin: 0;\r\n    overflow: visible;\r\n    position: static;\r\n    width: auto;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Input placeholder\r\n// =============================================================================\r\n/// @param {} - нет параметров\r\n///\r\n/// @example Sass - Использование\r\n/// .foo\r\n/// \t+placeholder\r\n/// \t\tcolor: green\r\n///\r\n/// +placeholder\r\n/// \tcolor: red\r\n///\r\n/// @example css - Вывод CSS\r\n/// .foo::-webkit-input-placeholder {\r\n/// \tcolor: green;\r\n/// }\r\n/// .foo:-moz-placeholder {\r\n/// \tcolor: green;\r\n/// }\r\n/// .foo::-moz-placeholder {\r\n/// \tcolor: green;\r\n/// }\r\n/// .foo:-ms-input-placeholder {\r\n/// \tcolor: green;\r\n/// }\r\n/// .foo.placeholder {\r\n/// \tcolor: green;\r\n/// }\r\n///\r\n/// ::-webkit-input-placeholder {\r\n/// \tcolor: red;\r\n/// }\r\n/// :-moz-placeholder {\r\n/// \t\tcolor: red;\r\n/// }\r\n/// ::-moz-placeholder {\r\n/// \tcolor: red;\r\n/// }\r\n/// :-ms-input-placeholder {\r\n/// \t\tcolor: red;\r\n/// }\r\n/// .placeholder {\r\n/// \t\tcolor: red;\r\n/// }\r\n\r\n@mixin optional-at-root($sel) {\r\n  @at-root #{if(not &, $sel, selector-append(&, $sel))} {\r\n    @content;\r\n}\r\n}\r\n\r\n@mixin placeholder() {\r\n  @include optional-at-root('::-webkit-input-placeholder') {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(':-moz-placeholder') {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root('::-moz-placeholder') {\r\n    opacity: 1;\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(':-ms-input-placeholder') {\r\n    opacity: 1;\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root('.placeholder') {\r\n    @content;\r\n}\r\n}\r\n\r\n\r\n@mixin placeholder-focus {\r\n  @include optional-at-root(\":focus::-webkit-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":focus:-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":focus::-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":focus:-ms-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\".placeholder:focus\") {\r\n    @content;\r\n}\r\n}\r\n\r\n@mixin placeholder-hover {\r\n  @include optional-at-root(\":hover::-webkit-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":hover:-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":hover::-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":hover:-ms-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\".placeholder:hover\") {\r\n    @content;\r\n}\r\n}\r\n\r\n@mixin placeholder-active {\r\n  @include optional-at-root(\":active::-webkit-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":active:-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":active::-moz-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\":active:-ms-input-placeholder\") {\r\n    @content;\r\n}\r\n\r\n  @include optional-at-root(\".placeholder:active\") {\r\n    @content;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Scroll lock\r\n// =============================================================================\r\n/// Примесь блокирования прокрутки страницы.\r\n///\r\n/// @param hasn't params\r\n\r\n@mixin scroll-blocked {\r\n  width: 100% !important;\r\n  height: 100% !important;\r\n  max-width: 100% !important;\r\n  max-height: 100% !important;\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  overflow: hidden !important;\r\n}\r\n\r\n// =============================================================================\r\n// Triangle helper mixin\r\n// =============================================================================\r\n/// Примесь созадает простую стрелку-треугольник\r\n/// Применяется к псевдоэлементу\r\n/// Triangle helper mixin\r\n/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`\r\n/// @param {Color} $color [currentcolor] - Triangle color\r\n/// @param {Length} $size [1em] - Triangle size\r\n/// @param {Number} $kef [1em] - Higher-to-base ratio\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo::before\r\n/// \t+triangle(bottom)\r\n/// \tposition: absolute\r\n/// \tleft: 50%\r\n/// \tbottom: 100%\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// .foo::before {\r\n/// \twidth: 0;\r\n/// \theight: 0;\r\n/// \tcontent: '';\r\n/// \tz-index: 2;\r\n/// \tborder-top: 1.5em solid tomato;\r\n/// \tborder-left: 1em solid transparent;\r\n/// \tborder-right: 1em solid transparent;\r\n/// \tposition: absolute;\r\n/// \tleft: 50%;\r\n/// \tbottom: 100%;\r\n/// }\r\n@mixin triangle($direction, $color: tomato, $size: 1em, $kef: 1.5) {\r\n  @if not index(top right bottom left, $direction) {\r\n    @error \"Direction must be either `top`, `right`, `bottom` or `left`.\";\r\n}\r\n  width: 0;\r\n  height: 0;\r\n  z-index: 2;\r\n  border-#{opposite-direction($direction)}: round($size * $kef) solid $color;\r\n  $perpendicular-borders: $size solid transparent;\r\n  @if $direction == top or $direction == bottom {\r\n    border-left: $perpendicular-borders;\r\n    border-right: $perpendicular-borders;\r\n}\r\n@else if $direction == right or $direction == left {\r\n        border-bottom: $perpendicular-borders;\r\n        border-top: $perpendicular-borders;\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// triangle pretty\r\n// =============================================================================\r\n/// Примесь формирует стрелку-треугольник с бордером\r\n/// Применяется к самому элементу, а стрелка-треугольник формируется из псевдоэлементов ::before, ::after\r\n/// Необходимо подключить плагин mathsass https://www.npmjs.com/package/mathsass\r\n/// Примесь требует доработки! Действует с ограничениями!\r\n/// Для правильной работи необходимо строго придерживаться правил добавления параметров\r\n///\r\n/// @param {Direction} $direction - Направление стрелки-треугольника: `top`, `right`, `bottom` or `left`\r\n/// @param {Map} $origins-map [] - Расположение стрелки-треугольника относительно родительского элемента\r\n///                                Например: (top: 50%, left: 100%) - по правому краю по центру\r\n///                                Задавать значения необходимо придерживая двух правил:\r\n///                                1) по первому из значений стрелка-треугольник будет смещена\r\n///                                   в противоположную сторону на половину ширины основания;\r\n///                                2) значений должно быть не больше двух, что логично.\r\n///                                Если нужно разместить стрелку внизу по центру, то значения должны быть такими:\r\n///                                (right: 50%, bottom: 0) либо (left: 50%, bottom: 0)\r\n/// @param {Color} $color [brown] - Цвет стрелки-треугольника\r\n/// @param {Length} $size-towards [30px] - Высота стрелки-треугольника с учетом бордера\r\n///                                      (от основания до вершины указвающей направление)\r\n/// @param {Length} $size-across [$size-towards] - Ширина стрелки-треугольника с учетом бордера\r\n///                                               (ширина основания противоположного вершине указвающей направление)\r\n/// @param {Color} $bd-color [tomato] - Цвет бордера стрелки-треугольника\r\n/// @param {Length} $bd-width [2px] - Цвет бордера стрелки-треугольника\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// .foo\r\n///   +triangle-pretty(bottom, (right: 50%, top: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n// .foo::before,\r\n// .foo::after{\r\n//   content: \"\";\r\n//   display: block;\r\n//   position: absolute;\r\n//   top: 100%;\r\n//   right: 50%;\r\n//   pointer-events: none;\r\n// }\r\n// .foo::before{\r\n//   z-index: 2;\r\n//   margin-right: -15px;\r\n//   border-top: 30px solid darkslategray;\r\n//   border-left: 15px solid transparent;\r\n//   border-right: 15px solid transparent;\r\n// }\r\n// .foo::after{\r\n//   z-index: 3;\r\n//   margin-right: -12px;\r\n//   border-top: 23px solid darkolivegreen;\r\n//   border-left: 12px solid transparent;\r\n//   border-right: 12px solid transparent;\r\n// }\r\n\r\n@mixin triangle-pretty($direction, $origins-map: (), $color: brown, $size-towards: 30px, $size-across: $size-towards, $bd-color: tomato, $bd-width: 2px) {\r\n  @if not index(top right bottom left, $direction) {\r\n    @error \"Direction must be either `top`, `right`, `bottom` or `left`.\";\r\n}\r\n  $unit-size-toward: unit($size-towards);\r\n  $unit-size-across: unit($size-across);\r\n  @if $unit-size-across != $unit-size-across {\r\n    @error \"Значение высоты треугольника и его основания должны быть в одинаковых единицах измерения\";\r\n}\r\n  // переменные для смещения стрелки-треугольника назад на половину ширины основания\r\n  $top: null;\r\n  $right: null;\r\n  $bottom: null;\r\n  $left: null;\r\n  $margin-direct: null;\r\n  $i: 0;\r\n  // определение направления и величины смещения\r\n  @each $origin, $value in $origins-map {\r\n    @if $i == 0 {\r\n      $margin-direct: $origin;\r\n  }\r\n    //@debug $margin-direct\r\n    $i: $i + 1;\r\n    @if $origin == top {\r\n      $top: $value;\r\n  }\r\n    //@debug 'top: ' + $value\r\n    @if $origin == right {\r\n      $right: $value;\r\n  }\r\n    //@debug 'right: ' + $value\r\n    @if $origin == bottom {\r\n      $bottom: $value;\r\n  }\r\n    //@debug 'bottom: ' + $value\r\n    @if $origin == left {\r\n      $left: $value;\r\n  }\r\n}\r\n  //@debug 'left: ' + $value\r\n  // вывод общих стилей\r\n  &::before, &::after {\r\n    @include pseudo;\r\n    top: $top;\r\n    right: $right;\r\n    bottom: $bottom;\r\n    left: $left;\r\n    pointer-events: none;\r\n}\r\n  // вывод стилей большой (внешней) стрелки-треугольника\r\n  &::before {\r\n    z-index: 2;\r\n    @if $margin-direct {\r\n      margin-#{$margin-direct}: -#{$size-across * 0.5};\r\n  }\r\n    border-#{opposite-direction($direction)}: $size-towards solid $bd-color;\r\n    $perpendicular-borders: round($size-across * 0.5) solid transparent;\r\n    @if $direction == top or $direction == bottom {\r\n      border-left: $perpendicular-borders;\r\n      border-right: $perpendicular-borders;\r\n  }\r\n  @else if $direction == right or $direction == left {\r\n          border-bottom: $perpendicular-borders;\r\n          border-top: $perpendicular-borders;\r\n  }\r\n}\r\n  // рассчет маленькой стрелки-треугольника по размеру бордера\r\n  $tg-angle: 2 * $size-towards / $size-across;\r\n  $angle: atan($tg-angle);\r\n  $sin-angle: sin($angle);\r\n  $height-large: $size-across * $sin-angle;\r\n  $height-small: $height-large - $bd-width * 2;\r\n  $small-size-across: $height-small / $sin-angle;\r\n  $small-size-toward: $small-size-across / 2 * $tg-angle;\r\n  // вывод стилей маленькой (внутренней) стрелки-треугольника\r\n  &::after {\r\n    z-index: 3;\r\n    @if $margin-direct {\r\n      margin-#{$margin-direct}: -(round($small-size-across * 0.5));\r\n  }\r\n    border-#{opposite-direction($direction)}: round($small-size-toward) solid $color;\r\n    $perpendicular-borders: round($small-size-across * 0.5) solid transparent;\r\n    @if $direction == top or $direction == bottom {\r\n      border-left: $perpendicular-borders;\r\n      border-right: $perpendicular-borders;\r\n  }\r\n  @else if $direction == right or $direction == left {\r\n          border-bottom: $perpendicular-borders;\r\n          border-top: $perpendicular-borders;\r\n  }\r\n}\r\n}\r\n\r\n// =============================================================================\r\n// Leaner gradient -vendor\r\n// =============================================================================\r\n/// Convert angle\r\n/// @author Chris Eppstein\r\n/// @param {Number} $value - Value to convert\r\n/// @param {String} $unit - Unit to convert to\r\n/// @return {Number} Converted angle\r\n///\r\n@function convert-angle($value, $unit) {\r\n  $convertable-units: deg grad turn rad;\r\n  $conversion-factors: 1 10grad / 9deg 1turn / 360deg 3.14159rad / 180deg;\r\n  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {\r\n    @return $value / nth($conversion-factors, index($convertable-units, unit($value))) * nth($conversion-factors, index($convertable-units, $unit));\r\n}\r\n  @warn \"Cannot convert `#{unit($value)}` to `#{$unit}`.\";\r\n}\r\n\r\n/// Test if `$value` is an angle\r\n/// @param {*} $value - Value to test\r\n/// @return {Bool}\r\n///\r\n@function is-direction($value) {\r\n  $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\r\n  $is-angle: type-of($value) == \"number\" and index(\"deg\" \"grad\" \"turn\" \"rad\", unit($value));\r\n  @return $is-direction or $is-angle;\r\n}\r\n\r\n/// Convert a direction to legacy syntax\r\n/// @param {Keyword | Angle} $value - Value to convert\r\n/// @require {function} is-direction\r\n/// @require {function} convert-angle\r\n///\r\n@function legacy-direction($value) {\r\n  @if is-direction($value) == false {\r\n    @warn \"Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction\";\r\n}\r\n  $conversion-map: (to top: bottom, to top right: bottom left, to right top: left bottom, to right: left, to bottom right: top left, to right bottom: left top, to bottom: top, to bottom left: top right, to left bottom: right top, to left: right, to left top: right bottom, to top left: bottom right);\r\n  @if map-has-key($conversion-map, $value) {\r\n    @return map-get($conversion-map, $value);\r\n}\r\n  @return 90deg - convert-angle($value, \"deg\");\r\n}\r\n\r\n/// Mixin printing a linear-gradient\r\n/// as well as a plain color fallback\r\n/// and the `-webkit-` prefixed declaration\r\n/// @param {String | List | Angle} $direction - Linear gradient direction\r\n/// @param {Arglist} $color-stops - List of color-stops composing the gradient\r\n///\r\n@mixin linear-gradient($direction, $color-stops...) {\r\n  @if is-direction($direction) == false {\r\n    $color-stops: $direction, $color-stops;\r\n    $direction: 180deg;\r\n}\r\n  background: nth(nth($color-stops, 1), 1);\r\n  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\r\n  background: linear-gradient($direction, $color-stops);\r\n}\r\n\r\n// Tests\r\n//.test-1\r\n//\t+linear-gradient(#31B7D7, #EDAC7D)\r\n//\r\n//.test-2\r\n//\t+linear-gradient(to right, #E47D7D 0%, #C195D3 50%, #4FB4E8 100%)\r\n//\r\n//.test-3\r\n//\t+linear-gradient(42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%)\r\n\r\n\r\n// =============================================================================\r\n// Font Face Generator\r\n// =============================================================================\r\n/// Примесь генерирует подключение @font-face шрифтов\r\n///\r\n/// @author []\r\n///\r\n/// @param {String} $name [] - название шрифта\r\n/// @param {String} $path [] - путь к шрифту включая файл без расширения\r\n/// @param {String} $weight [null] - значение `font-weight`\r\n/// @param {String} $style [null] - значение `font-style`\r\n/// @param {Map} $exts [eot woff2 woff ttf svg] - мапа расширений шрифта\r\n///\r\n/// @example Sass - Использование\r\n///\r\n/// +font-face(\"candara\", \"../fonts/candara/regular/candara\", normal, normal, eot woff ttf svg)\r\n///\r\n/// @example css - Вывод CSS\r\n///\r\n/// @font-face{\r\n///   font-family: \"название-шрифта\";\r\n///   font-style: normal;\r\n///   font-weight: normal;\r\n///   src: url(\"../fonts/candara/regular/candara.eot?\") format(\"eot\"), url(\"../fonts/candara/regular/candara.woff\") format(\"woff\"), url(\"../fonts/candara/regular/candara.ttf\") format(\"truetype\"), url(\"../fonts/candara/regular/candara.svg#candara-regular\") format(\"svg\");\r\n/// }\r\n\r\n@function str-replace($string, $search, $replace: \"\") {\r\n  $index: str-index($string, $search);\r\n  @if $index {\r\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n}\r\n  @return $string;\r\n}\r\n\r\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\r\n  $src: null;\r\n  $extmods: (eot: \"?\", svg: \"#\" + str-replace($name, \" \", \"_\"));\r\n  $formats: (otf: \"opentype\", ttf: \"truetype\");\r\n  @each $ext in $exts {\r\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\r\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\r\n}\r\n  @font-face {\r\n    font-family: quote($name);\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n    src: $src;\r\n}\r\n}\r\n\r\n\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТИОПОГРАФИЧЕСКИХ СТИЛЯХ\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТИПОГРАФИЧЕСКИХ СТИЛЯХ конец\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n\r\n\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n@mixin print-reset {\r\n  display: block !important;\r\n  float: none !important;\r\n  position: relative !important;\r\n  overflow: visible !important;\r\n  height: auto !important;\r\n  min-height: 0 !important;\r\n  max-height: none !important;\r\n  width: auto !important;\r\n  min-width: 0 !important;\r\n  max-width: none !important;\r\n  left: auto !important;\r\n  top: auto !important;\r\n  right: auto !important;\r\n  bottom: auto !important;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  transform: none !important;\r\n  text-align: left !important;\r\n  border: none !important;\r\n  box-shadow: none !important;\r\n  opacity: 1 !important;\r\n  visibility: visible !important;\r\n  z-index: auto !important;\r\n}\r\n\r\n@mixin prints-space-bottom-sm {\r\n  margin-top: 0 !important;\r\n  margin-bottom: 0.5cm !important;\r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n@mixin prints-space-bottom-md {\r\n  margin-top: 0 !important;\r\n  margin-bottom: 1cm !important;\r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n@mixin prints-space-bottom-lg {\r\n  margin-bottom: 1.5cm !important;\r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\r\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ конец\r\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//","@import \"functions\";\r\n@import \"placeholders\";\r\n\r\n// ==========================================================================\r\n// Variables\r\n// ==========================================================================\r\n\r\n// medium query\r\n// medium query\r\n$breakpoints: (\r\n    \"desk-l\": 2560px,\r\n    \"desk\": 1920px,\r\n    \"desk-s\": 1600px,\r\n    \"lap-l\": 1440px,\r\n    \"lap\": 1366px,\r\n    \"lap-s\": 1280px,\r\n    \"net\": 1200px,\r\n    \"tab\": 992px,\r\n    \"tab-s\": 768px,\r\n    \"mob\": 640px,\r\n    \"mob-s\": 480px,\r\n    \"mob-xs\": 375px,\r\n    \"mob-xxs\": 360px\r\n);\r\n\r\n\r\n// Fonts style\r\n// ==========================================================================\r\n$font-norm: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\r\n$font-alt: Georgia, serif !default;\r\n\r\n// Main font\r\n@mixin font-normal {\r\n  font-family: $font-norm;\r\n}\r\n\r\n@mixin font-bold {\r\n  font-weight: bold;\r\n}\r\n\r\n@mixin font-italic {\r\n  font-style: italic;\r\n}\r\n\r\n@mixin font-bold-italic {\r\n  font-weight: bold;\r\n  font-style: italic;\r\n}\r\n\r\n// Alternative font\r\n@mixin font-alt {\r\n  font-family: $font-alt;\r\n}\r\n\r\n@mixin font-alt-bold {\r\n  font-family: $font-alt;\r\n  font-weight: bold;\r\n}\r\n\r\n@mixin font-alt-bold-italic {\r\n  font-family: $font-alt;\r\n  font-weight: bold;\r\n  font-style: italic;\r\n}\r\n\r\n// Base\r\n// ==========================================================================\r\n\r\n$font-size: 1.6rem !default;\r\n$line-height: 2.4rem !default;\r\n$letter-spacing: normal !default;\r\n\r\n// ----------------------------------------------------\r\n$font-size--mob: 1.4rem !default;\r\n$line-height--mob: 2.0rem !default;\r\n\r\n// Heading h1\r\n$font-size-h1: 4.2rem !default;\r\n$line-height-h1: 5.2rem !default;\r\n$line-height-h1-kef: $line-height-h1 / $font-size-h1;\r\n\r\n// ----------------------------------------------------\r\n$font-size-h1--tab: 3.4rem !default;\r\n$line-height-h1--tab: round-float($font-size-h1--tab * $line-height-h1-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n$font-size-h1--mob: 3.0rem !default;\r\n$line-height-h1--mob: round-float($font-size-h1--mob * $line-height-h1-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n@mixin font-h1() {\r\n  font-size: $font-size-h1;\r\n  line-height: $line-height-h1;\r\n\r\n  @include media(\"<tab\") {\r\n    font-size: $font-size-h1--tab;\r\n    line-height: $line-height-h1--tab;\r\n  }\r\n\r\n  @include media(\"<mob\") {\r\n    font-size: $font-size-h1--mob;\r\n    line-height: $line-height-h1--mob;\r\n  }\r\n}\r\n\r\n// Heading h2\r\n$font-size-h2: 3.0rem !default;\r\n$line-height-h2: 4.2rem !default;\r\n$line-height-h2-kef: $line-height-h2 / $font-size-h2;\r\n\r\n// ----------------------------------------------------\r\n$font-size-h2--tab: 2.8rem !default;\r\n$line-height-h2--tab: round-float($font-size-h2--tab * $line-height-h2-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n$font-size-h2--mob: 2.4rem !default;\r\n$line-height-h2--mob: round-float($font-size-h2--mob * $line-height-h2-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n@mixin font-h2() {\r\n  font-size: $font-size-h2;\r\n  line-height: $line-height-h2;\r\n\r\n  @include media(\"<tab\") {\r\n    font-size: $font-size-h2--tab;\r\n    line-height: $line-height-h2--tab;\r\n  }\r\n\r\n  @include media(\"<mob\") {\r\n    font-size: $font-size-h2--mob;\r\n    line-height: $line-height-h2--mob;\r\n    letter-spacing: 0.01em;\r\n  }\r\n}\r\n\r\n// Heading h3\r\n$font-size-h3: 2.4rem !default;\r\n$line-height-h3: 3.0rem !default;\r\n$line-height-h3-kef: $line-height-h3 / $font-size-h3;\r\n\r\n// ----------------------------------------------------\r\n$font-size-h3--tab: 2.2rem !default;\r\n$line-height-h3--tab: round-float($font-size-h3--tab * $line-height-h3-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n$font-size-h3--mob: 1.8rem !default;\r\n$line-height-h3--mob: round-float($font-size-h3--mob * $line-height-h3-kef, 1) !default; // Использовать рассчетное значение, если нет в дизайне\r\n\r\n// ----------------------------------------------------\r\n@mixin font-h3() {\r\n  font-size: $font-size-h3;\r\n  line-height: $line-height-h3;\r\n\r\n  @include media(\"<tab\") {\r\n    font-size: $font-size-h3--tab;\r\n    line-height: $line-height-h3--tab;\r\n  }\r\n\r\n  @include media(\"<mob\") {\r\n    font-size: $font-size-h3--mob;\r\n    line-height: $line-height-h3--mob;\r\n    letter-spacing: 0.02em;\r\n  }\r\n}\r\n\r\n// Heading h4\r\n$font-size-h4: $font-size !default;\r\n$line-height-h4: $line-height !default;\r\n\r\n// ----------------------------------------------------\r\n$font-size-h4--mob: $font-size--mob !default;\r\n$line-height-h4--mob: $line-height--mob !default;\r\n\r\n@mixin font-h4() {\r\n  font-size: $font-size-h4;\r\n  line-height: $line-height-h4;\r\n\r\n  @include media(\"<mob\") {\r\n    font-size: $font-size-h4--mob;\r\n    line-height: $line-height-h4--mob;\r\n  }\r\n}\r\n\r\n// Heading h5\r\n$font-size-h5: $font-size !default;\r\n$line-height-h5: $line-height !default;\r\n\r\n// Heading h6\r\n$font-size-h6: $font-size !default;\r\n$line-height-h6: $line-height !default;\r\n\r\n// Spaces\r\n$bottom-space: $line-height !default;\r\n$bottom-space--large: $line-height * 3 !default;\r\n$bottom-space--small: round-float($line-height*0.75, 1) !default;\r\n\r\n\r\n// Colors\r\n// ==========================================================================\r\n\r\n// Color of brands\r\n$base-color: #ee6e73 !default;\r\n$base-color-alt: invert($base-color) !default;\r\n\r\n// ----------------------------------------------------\r\n$bg-color: #fff !default;\r\n$bg-color-alt: #f3f3f3 !default;\r\n\r\n// ----------------------------------------------------\r\n$text-color: #262626 !default;\r\n$text-color-muted: #6c757d !default;\r\n$text-color-light: #ccc !default;\r\n\r\n// ----------------------------------------------------\r\n$title-color: #ee6e73 !default;\r\n\r\n// ----------------------------------------------------\r\n$link-color: #007bff !default;\r\n$focus-color: #0080ff !default;\r\n\r\n// ----------------------------------------------------\r\n$border-color: lightgray !default;\r\n\r\n// ----------------------------------------------------\r\n$mark-color: #fd0cff !default;\r\n\r\n// ----------------------------------------------------\r\n$success-color: #28a745 !default;\r\n$error-color: #dc3545 !default;\r\n$info-color: #17a2b8 !default;\r\n$warning-color: #ffc107 !default;\r\n$light-color: #f8f9fa !default;\r\n$dark-color: #343a40 !default;\r\n\r\n\r\n// Classes for article page / article content / typography\r\n// ==========================================================================\r\n// @example Sass - Использование\r\n// .#{$article-content}\r\n//\r\n// @example css - Вывод CSS\r\n// .article-content\r\n$article-content: article-content !default;\r\n$typography-style-class: typography !default;\r\n\r\n\r\n// Layout\r\n// ==========================================================================\r\n\r\n// Минимальная ширина сайта\r\n$layout-page-min-width: 32rem !default;\r\n// Максимальная ширина сайта\r\n$layout-page-max-width: 192rem !default;\r\n// Отступы для всего сайта\r\n$layout-page-space: 3rem 5rem !default;\r\n\r\n// ---------------------------------------\r\n// Максимальная ширина текстового блока\r\n$layout-text-width: 80rem !default;\r\n// Отступы у текствого блока\r\n$layout-text-space: 2rem 3rem !default;\r\n\r\n// ---------------------------------------\r\n// Максимальная ширина элементов выходящих за пределы текста\r\n$layout-flood-width: 110rem !default;\r\n\r\n// ---------------------------------------\r\n// Внутренние отступы\r\n$grid-space: 2.8rem 3rem !default;\r\n\r\n\r\n// Header\r\n// ==========================================================================\r\n\r\n\r\n// Footer\r\n// ==========================================================================\r\n\r\n\r\n// Buttons\r\n// ==========================================================================\r\n$btn-height: 5rem !default;\r\n$btn-bg-color: $base-color !default;\r\n$btn-bg-hover-color: invert($base-color) !default;\r\n$btn-text-color: white !default;\r\n$btn-disabled-color: #ccc !default;\r\n\r\n@mixin btn-disabled() {\r\n  cursor: default !important;\r\n  color: white !important;\r\n  border-color: $btn-disabled-color !important;\r\n  background-color: $btn-disabled-color !important;\r\n  box-shadow: none !important;\r\n  pointer-events: none;\r\n}\r\n\r\n\r\n// Forms\r\n// ==========================================================================\r\n\r\n// Colors of forms\r\n$form-text-color: $text-color !default;\r\n$form-placeholder-color: lighten($form-text-color, 65%) !default;\r\n$form-bg-color: white !default;\r\n$form-border-color: lighten($form-text-color, 70%) !default;\r\n// validation\r\n$form-error-color: $error-color !default;\r\n$form-success-color: $success-color !default;\r\n// disabled\r\n$form-text-color--disabled: #ced4da !default;\r\n$form-bg-color--disabled: #e9ecef !default;\r\n$form-border-color--disabled: #ced4da !default;\r\n// focus\r\n$form-border-color--focus: darken($form-border-color, 20%) !default;\r\n\r\n// Fonts of forms\r\n$form-font-size: 16px !default;\r\n$form-line-height: 24px !default;\r\n$form-input-height: 50px !default;\r\n$form-letter-spacing: null !default;\r\n\r\n// @example Sass - Использование\r\n// @example css - Вывод CSS\r\n@mixin inputs-font {\r\n  //+font-alt\r\n  font-family: inherit;\r\n  font-size: $form-font-size;\r\n  line-height: $form-line-height;\r\n  @if $form-letter-spacing {\r\n    letter-spacing: $form-letter-spacing;\r\n  }\r\n  color: $form-text-color;\r\n}\r\n\r\n@mixin selects-font {\r\n  @include inputs-font;\r\n}\r\n\r\n// Layout of forms\r\n$form-border-width: 1px !default;\r\n$form-input-space-vt: floor(($form-input-height - $form-line-height - $form-border-width*2)/2) !default;\r\n// верхний паддинг округляем в нижнюю сторону\r\n$form-input-space-vb: ceil(($form-input-height - $form-line-height - $form-border-width*2)/2) !default;\r\n// нижний паддинг округляем в верхнюю сторону\r\n$form-input-space-h: 18px !default;\r\n$form-bottom-space: 3rem !default;\r\n$form-bottom-space--mob: 3rem !default;\r\n\r\n// Vertical spaces\r\n@mixin forms-space {\r\n  margin: 0 0 $form-bottom-space;\r\n\r\n  @include media(\"<mob\") {\r\n    margin: 0 0 $form-bottom-space--mob;\r\n  }\r\n}\r\n\r\n// Checkboxes\r\n// Radio Buttons\r\n$checkbox-color: #ff3aa3 !default;\r\n\r\n// Select\r\n$select-space-v: 12px !default;\r\n$multiple-item-space: 3px !default;\r\n\r\n// Select custom arrow\r\n$select-arrow-width: 40px !default;\r\n$select-arrow-height: $form-input-height !default;\r\n\r\n// Style Selection\r\n@mixin selectSelection() {\r\n  height: $form-input-height;\r\n  width: 100%;\r\n  padding: $form-input-space-vt $select-arrow-width $form-input-space-vb $form-input-space-h;\r\n  background: $form-bg-color;\r\n  border: #{$form-border-width} solid #{$form-border-color};\r\n  border-radius: 0;\r\n  box-shadow: none;\r\n  text-indent: 0;\r\n  outline: none;\r\n}\r\n\r\n\r\n// States\r\n@mixin form-success {\r\n  color: $form-success-color;\r\n  border-color: $form-success-color;\r\n}\r\n\r\n@mixin form-error {\r\n  color: $form-error-color;\r\n  border-color: $form-error-color;\r\n}\r\n\r\n@mixin filled {\r\n  color: blueviolet;\r\n  border-color: blueviolet;\r\n}\r\n\r\n@mixin focused {\r\n  //color: $form-border-focus-color\r\n  border-color: $form-border-color--focus;\r\n}\r\n\r\n\r\n// Form validate feedback\r\n// ==========================================================================\r\n$validate-feedback-font-size: 1.2rem;\r\n$validate-feedback-line-height: 1.6rem;\r\n$validate-feedback-height: 2.2rem;\r\n\r\n// Animation\r\n// ==========================================================================\r\n$animation-speed: 0.2s !default;\r\n$animation-speed-mouseleave: 0.35s !default;","// =============================================================================\r\n// pow\r\n// =============================================================================\r\n/// Возведение в степень\r\n///\r\n/// @param {Number, Length} $number - Число\r\n/// @param {Number, Length} $exponent - Степень\r\n/// @return {Number} - Значение `$number` возведенно в степень `$exponent`\r\n\r\n@function pow($number, $exponent) {\r\n  $value: 1;\r\n  @if $exponent > 0 {\r\n    @for $i from 1 through $exponent {\r\n      $value: $value * $number;\r\n  }\r\n}\r\n  @return $value;\r\n}\r\n\r\n// =============================================================================\r\n// round-float\r\n// =============================================================================\r\n/// Округление до n знаков после запятой\r\n///\r\n/// @param {Number, Length} $number - Число\r\n/// @param {Number, Length} $n - Количество знаков после запяной\r\n/// @return {Number} - Значение округленное до `n` знаков после запятой\r\n\r\n@function round-float($number, $n) {\r\n  $float: pow(10, $n);\r\n  $value: round($number * $float) / $float;\r\n  @return $value;\r\n}"]}